var $=(f,S,s)=>new Promise((p,x)=>{var E=j=>{try{A(s.next(j))}catch(C){x(C)}},h=j=>{try{A(s.throw(j))}catch(C){x(C)}},A=j=>j.done?p(j.value):Promise.resolve(j.value).then(E,h);A((s=s.apply(f,S)).next())});import{d as W,u as at,r as ot,a as T,E as nt,b as it,c as dt,e as ut,f as lt,o as _,g as w,h as a,i as l,t as y,j as c,k as e,w as o,l as L,m as H,n as ct,p as pt,F as q,q as z,s as ft,v as _t,x as bt,y as Z,z as mt,A as yt,B as G,C as vt,D as tt}from"./index.27a20cdf.js";import{p as Q}from"./index.65159add.js";import{_ as gt,u as ht}from"./table.b14e82ad.js";import"./el-input.172ae120.js";import{_ as st}from"./index.5a6dfef3.js";/* empty css                  */import{d as V,a as K}from"./index.eddab6a4.js";/* empty css                        */import{u as kt,i as wt,a as xt,b as Ct,c as Dt,d as jt,e as Tt,f as St,H as Bt}from"./index.esm.min.5b0d4180.js";import{_ as rt}from"./plugin-vue_export-helper.db4a78ed.js";import{g as $t}from"./index.cb30be27.js";const At=f=>$(void 0,null,function*(){const S={};return yield Q({url:"/getProjectDetailsByID/",data:{project_id:f}}).then(s=>Object.assign(S,s)),S}),Nt=(f,S,s)=>$(void 0,null,function*(){const p=yield Q({url:"/getAllRunsByProjectIDAsync/",data:{project_id:S}});f.value=p,s()}),Ft=f=>Q({url:"/getDataByProjectID/",data:{project_id:f}}),et=(f,S)=>Q({url:"/getProjectFeatureTable/",data:{project_id:f,kingdom:S}}),It=f=>Q({url:"/getMarkerTaxaByDAID/",data:{da_id:f}});const Pt={style:{"background-color":"#faf5ff"},class:"my-8 p-8"},Mt={class:"text-red-800 font-bold italic"},Rt={class:"text-red-800 font-bold italic"},Et=W({__name:"runTable",props:{id:{type:String,required:!0},batchCount:{type:Number,required:!0}},setup(f){at().currentRoute.value;const s=b=>{window.open(b)},p=ot({total:0,page:1,limit:10,keywords:"",data:[],totalData:[],except:!1}),x=[{label:"Project ID",prop:"project_id",width:"140px"},{label:"Run ID",prop:"run_id",width:"140px"},{label:"Assay Type",prop:"assay_type",width:"140px"},{label:"Phenotype Name",prop:"phenotype_name",slotName:"phenotype",width:"260px"},{label:"BMI",prop:"bmi"},{label:"Sex",prop:"sex"},{label:"Age",prop:"age"},{label:"Country",prop:"country",width:"120px"},{label:"QC State",prop:"QC_state",width:"120px"}],E=({row:b,column:r,rowIndex:I,columnIndex:M})=>{if(M===8){if(b.QC_state==="1")return{"background-color":"#CCFFCC"};if(b.QC_state==="0")return{"background-color":"#fff0f0"}}else return{"background-color":"#faf5ff"}},h=T([]),{handleSortChange:A,changePage:j,getTableData:C,searchTable:n}=ht(h,p);Nt(h,f.id,n);const d=()=>$(this,null,function*(){const b=h.value;let r=`Selected project id: ${f.id}
${["Project ID","Run ID","Sample name","Assay type","Sequencing method","Phenotype name","Sample description","Phenotype ID","country","Geographic location","Longitude","lattitude","age","sex","BMI","Antibiotic use","Antibiotic name","Bodysite","Batch","Batch2","QC bacteria","QC fungi","QC State"].join("	")}
`;b.forEach(R=>{const k=[];for(const B in R)B!="id"&&B!="QC_Bacteria_gg"&&k.push(R[B]);r+=k.join("	")+`
`});const I=new Blob([r],{type:"text/plain;charset=utf-8"}),M="selected_project_"+Date.now().toString()+".txt";K(I,M)});return(b,r)=>{const I=nt,M=st,R=it,k=dt,B=ut,O=lt,P=gt;return _(),w("div",Pt,[a("p",null,[r[0]||(r[0]=l("Meta data are available for in total ")),a("span",Mt,y(c(p).total),1),r[1]||(r[1]=l(" runs (samples) from ")),a("span",Rt,y(f.batchCount),1),r[2]||(r[2]=l(" batch(es);"))]),e(k,null,{default:o(()=>[e(R,{span:16},{default:o(()=>[e(M,{"is-external":"","show-icon":!1,onClick:L(d,["prevent"])},{default:o(()=>[r[3]||(r[3]=l(" Download meta-data of all associated runs as txt ")),e(I,null,{default:o(()=>[e(c(V))]),_:1})]),_:1})]),_:1})]),_:1}),e(P,{onPaginationChange:c(j),"table-data":c(p).data,"table-head":x,total:c(p).total,"default-sort":{prop:"valid_runs",order:"descending"},onSortChange:c(A),"cell-style":E},{phenotype:o(({row:u})=>[e(M,{to:`/explore/${u.phenotype_id}`},{default:o(()=>[l(y(u.phenotype_name),1)]),_:2},1032,["to"]),e(O,{content:"click to view it in Mesh",effect:"dark",placement:"top"},{default:o(()=>[e(B,{type:"primary",size:"small",style:{float:"right"},onClick:t=>s("https://meshb.nlm.nih.gov/record/ui?ui="+u.phenotype_id)},{default:o(()=>r[4]||(r[4]=[l(" MeSH\xA0 "),a("i",{class:"iconfont icon-share white"},null,-1)])),_:2},1032,["onClick"])]),_:2},1024)]),_:1},8,["onPaginationChange","table-data","total","onSortChange"])])}}});const Ot={class:"my-8 p-2",style:{"background-color":"#faf5ff"}},Lt={key:0},Vt=W({__name:"barplot",props:{markerData:{type:Object,required:!0}},setup(f){kt([wt,xt,Ct,Dt,jt,Tt,St]);const S={position:"right"},s=ot({taxonLevel:"genus",markerKingdom:"Bacteria"}),p=T([]);H(()=>f.markerData,()=>{for(let n=0;n<f.markerData.length;n++){const d=f.markerData[n],b=Object.keys(d)[0];var C=Object.values(d)[0];p.value[n]={[b]:C}}},{deep:!0});const x=()=>{for(let n=0;n<f.markerData.length;n++){const d=f.markerData[n],b=Object.keys(d)[0];var C=Object.values(d)[0];s.markerKingdom!=""&&(C=C.filter(r=>r.kingdom==s.markerKingdom)),s.taxonLevel!=""&&(C=C.filter(r=>r.taxon_level==s.taxonLevel)),p.value[n]={[b]:C}}},E=T([]),h=T([]),A=T([]),j=T(!0);return H(()=>p,(C,n)=>{j.value=!1;for(let b=0;b<p.value.length;b++){const r=p.value[b],I=Object.keys(r)[0];var d=Object.values(r)[0];if(d=d.filter(k=>k.display==1),d[0]==null)continue;h.value.push(d.length*20+100);const R={title:{text:`${I}: ${d[0].case_name} vs. ${d[0].control_name}`},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{top:80,bottom:30,left:"20%"},xAxis:{type:"value",position:"top",splitLine:{lineStyle:{type:"dashed"}}},yAxis:{type:"category",axisLine:{show:!1},axisLabel:{show:!0,formatter:function(k){var B="",O=k.split(" "),P="";return O.forEach(function(u){P.length+u.length<25?P+=u+" ":(B+=P+`-
`,P=u+" ")}),P.length>0&&(B+=P),B}},axisTick:{show:!1},splitLine:{show:!1},data:d.map(k=>k.scientific_short_name)},series:[{name:"log2(Fold Change)",type:"bar",stack:"Total",itemStyle:{color:k=>k.value>0?"#be123c":"#047857"},label:{show:!1,fontSize:16,formatter:"{b}"},data:d.map(k=>({value:k.lfc,label:S})),animationDelay:function(k){return k*10+100}}]};E.value.push(R)}A.value=E.value},{deep:!0}),(C,n)=>{const d=ct,b=pt;return _(),w("div",Ot,[n[8]||(n[8]=a("span",{class:"font-bold align-bottom"}," Markers level to show: ",-1)),e(b,{modelValue:s.taxonLevel,"onUpdate:modelValue":n[0]||(n[0]=r=>s.taxonLevel=r),size:"small",onChange:x},{default:o(()=>[e(d,{label:""},{default:o(()=>n[2]||(n[2]=[l("All")])),_:1}),e(d,{label:"species"},{default:o(()=>n[3]||(n[3]=[l(" Species ")])),_:1}),e(d,{label:"genus"},{default:o(()=>n[4]||(n[4]=[l(" Genus ")])),_:1})]),_:1},8,["modelValue"]),n[9]||(n[9]=a("br",null,null,-1)),n[10]||(n[10]=a("span",{class:"font-bold align-bottom"}," Markers kingdom to show: ",-1)),e(b,{modelValue:s.markerKingdom,"onUpdate:modelValue":n[1]||(n[1]=r=>s.markerKingdom=r),size:"small",onChange:x},{default:o(()=>[e(d,{label:""},{default:o(()=>n[5]||(n[5]=[l("All")])),_:1}),e(d,{label:"Bacteria"},{default:o(()=>n[6]||(n[6]=[l(" Bacteria ")])),_:1}),e(d,{label:"Fungi"},{default:o(()=>n[7]||(n[7]=[l(" Fungi ")])),_:1})]),_:1},8,["modelValue"]),j.value?ft("",!0):(_(),w("div",Lt,[(_(!0),w(q,null,z(A.value,(r,I)=>(_(),w("div",null,[e(c(Bt),{class:"chart my-4",option:r,style:_t({height:h.value[I]+"px"})},null,8,["option","style"])]))),256))]))])}}});var Kt=rt(Vt,[["__scopeId","data-v-55cb13be"]]);const Qt={class:"project-detailed-page px-10 mx-auto md:w-screen-md lg:w-screen-lg xl:w-screen-xl"},Gt={class:"content"},Ht=["id"],qt={class:"info"},zt={key:0},Wt={key:1},Ut={class:"text-red-800 font-bold italic"},Jt={class:"text-red-800 font-bold italic"},Xt={class:"text-red-800 font-bold italic"},Yt={class:"text-red-800 font-bold italic"},Zt={class:"text-red-800 font-bold italic"},te={key:0},ee=["id"],ae=["id"],oe={class:"info"},ne={style:{"background-color":"#faf5ff"},class:"my-8 p-8"},le={key:0},se={key:0},re={key:1},ie=["id"],de={key:0},ue={key:1},ce={style:{"background-color":"#faf5ff"},class:"my-8 p-8"},pe={class:"text-red-800 font-bold italic"},fe={class:"text-red-800 font-bold italic"},_e=["id"],be=W({__name:"_id",setup(f){const S=at(),{path:s,params:{id:p}}=S.currentRoute.value,x=T({});bt(()=>$(this,null,function*(){x.value=yield At(p)}));const E=u=>{u.preventDefault()},h=T({stats:{counts:[],phenotype:[],da_stats:[]}}),A=T({allData:[]});Ft(p).then(u=>{h.value.stats=u.stats,A.value.allData=u.batchs});const j=T([]);function C(){return $(this,null,function*(){j.value=yield $t()})}const n=()=>$(this,null,function*(){yield C();const u=j.value;let t=`${["hgmt_micro_id","level","taxa","short_name","taxid","scientific_name"].join("	")}
`;u.forEach(i=>{const v=[];for(const g in i)g!="id"&&v.push(i[g]);t+=v.join("	")+`
`});const D=new Blob([t],{type:"text/plain;charset=utf-8"}),N="taxa2ncbi_"+Date.now().toString()+".txt";K(D,N)}),d=T([]);function b(){return $(this,null,function*(){d.value=yield et(p,"bacteria")})}const r=()=>$(this,null,function*(){yield b();const u=d.value;let t=`${["Taxa","Run ID","Abundance"].join("	")}
`;u.forEach(i=>{const v=[];for(const g in i)g!=="id"&&v.push(i[g]);t+=v.join("	")+`
`});const D=new Blob([t],{type:"text/plain;charset=utf-8"}),N="Bacteria_"+Date.now().toString()+".txt";K(D,N)});function I(){return $(this,null,function*(){d.value=yield et(p,"fungi")})}const M=()=>$(this,null,function*(){yield I();const u=d.value;let t=`${["Taxa","Run ID","Abundance"].join("	")}
`;u.forEach(i=>{const v=[];for(const g in i)g!=="id"&&v.push(i[g]);t+=v.join("	")+`
`});const D=new Blob([t],{type:"text/plain;charset=utf-8"}),N="Fungi_"+Date.now().toString()+".txt";K(D,N)}),R=T(""),k=()=>$(this,null,function*(){try{const u=window.location.hostname;R.value=`curl -d '{"project_id": "${p}", "kingdom": "ko"}' http://${u}/hgmt/api/getProjectFeatureTable/`,yield navigator.clipboard.writeText(R.value),tt.success("curl command copied to clipboard")}catch(u){console.error("\u590D\u5236\u5931\u8D25:",u),tt.error("Failed")}}),B=T([]),O=T([]);H(()=>h.value.stats.da_stats,(u,t)=>{u.map(D=>{O.value.push(D.da_id),It(D.da_id).then(N=>{B.value.push(N)})})});const P=()=>$(this,null,function*(){const u=[];for(let i=0;i<O.value.length;i++){const v=Object.values(B.value[i])[0];for(const g in v)u.push(v[g])}let t=`Selected project ${p}
${["DA Batch","Batch","Taxa Full Name","Kingdom","Level","w_statistic","p-value","LFC","Assay Type","Case","Control","Nr. of Case","Nr. of Control","Taxa Short Name","Display","Nr. of Projects","Conflict"].join("	")}
`;u.forEach(i=>{const v=[];for(const g in i)g!=="id"&&v.push(i[g]);t+=v.join("	")+`
`});const D=new Blob([t],{type:"text/plain;charset=utf-8"}),N="selected_project_"+Date.now().toString()+".txt";K(D,N)});return(u,t)=>{var J,X,Y;const D=Z("a-anchor-link"),N=Z("a-anchor"),i=st,v=lt,g=nt,F=mt,U=yt;return _(),w("div",Qt,[e(N,{class:"catalogue",onClick:E,"target-offset":80},{default:o(()=>[e(D,{href:"#"+c(s)+"#summary",title:"Summary"},null,8,["href"]),e(D,{href:"#"+c(s)+"#associated-runs",title:"Associated runs"},{default:o(()=>[e(D,{href:"#"+c(s)+"#feature-table",title:"Feature table"},null,8,["href"])]),_:1},8,["href"]),e(D,{href:"#"+c(s)+"#marker-taxa",title:"Marker taxa"},{default:o(()=>[e(D,{href:"#"+c(s)+"#barplot",title:"Barplot"},null,8,["href"])]),_:1},8,["href"])]),_:1}),a("div",Gt,[a("h1",null,"Project: "+y(c(p)),1),a("h2",{id:`${c(s)}#summary`},"Summary",8,Ht),a("div",qt,[a("dl",null,[a("dd",null,[t[0]||(t[0]=a("span",{class:"font-bold"},"Project ID",-1)),t[1]||(t[1]=l(": ")),e(i,{to:`https://www.ncbi.nlm.nih.gov/bioproject/${c(p)}`,isExternal:""},{default:o(()=>[l(y(c(p)),1)]),_:1},8,["to"])]),a("dd",null,[t[2]||(t[2]=a("span",{class:"font-bold"},"Associated project",-1)),t[3]||(t[3]=l(": ")),x.value.associated_project_id==="NA"?(_(),w("span",zt,"NA")):(_(),w("span",Wt,[e(i,{to:`https://www.ncbi.nlm.nih.gov/bioproject/${x.value.associated_project_id}`,isExternal:""},{default:o(()=>[l(y(x.value.associated_project_id),1)]),_:1},8,["to"])]))]),a("dd",null,[t[4]||(t[4]=a("span",{class:"font-bold"},"Project description",-1)),l(": "+y(x.value.project_description),1)]),a("dd",null,[t[9]||(t[9]=a("span",{class:"font-bold"},"Total nr. of runs",-1)),t[10]||(t[10]=l(": ")),a("span",Ut,y((J=h.value.stats.counts[0])==null?void 0:J.total_run_count),1),(_(!0),w(q,null,z(h.value.stats.counts,m=>(_(),w("dl",null,[a("dd",null,[t[5]||(t[5]=a("span",{class:"font-bold"},"nr. of processed runs: ",-1)),a("span",Jt,y(m.valid_run_count),1)]),a("dd",null,[t[6]||(t[6]=a("span",{class:"font-bold"},"nr. of runs with Bacteria-kingdom abundance information: ",-1)),a("span",Xt,y(m.run_with_bac),1)]),a("dd",null,[t[7]||(t[7]=a("span",{class:"font-bold"},"nr. of runs with Fungi-kingdom abundance information: ",-1)),a("span",Yt,y(m.run_with_fungi),1)]),a("dd",null,[t[8]||(t[8]=a("span",{class:"font-bold"},"nr. of runs with KO functional information: ",-1)),a("span",Zt,y(m.run_with_kos),1)])]))),256))]),a("dd",null,[t[11]||(t[11]=a("span",{class:"font-bold"},"Associated phenotypes",-1)),t[12]||(t[12]=l(": ")),a("dl",null,[(_(!0),w(q,null,z(h.value.stats.phenotype,m=>(_(),w("dd",null,[e(i,{to:`/explore/${m.phenotype_id}`},{default:o(()=>[l(y(m.phenotype_name),1)]),_:2},1032,["to"]),e(i,{"is-external":"",to:`https://meshb.nlm.nih.gov/record/ui?ui=${m.phenotype_id}`},null,8,["to"])]))),256))])]),a("dd",null,[t[13]||(t[13]=a("span",{class:"font-bold"},"Related publication",-1)),t[14]||(t[14]=l(": ")),x.value.public_accession==="NA"?(_(),w("span",te,"NA")):(_(),G(i,{key:1,"is-external":"","show-icon":!0,to:`https://www.ncbi.nlm.nih.gov/pubmed/${x.value.public_accession}`},{default:o(()=>[l(y(x.value.public_accession),1)]),_:1},8,["to"]))])])]),a("h2",{id:`${c(s)}#associated-runs`},"Associated runs",8,ee),t[31]||(t[31]=vt('<div class="info" data-v-83546474><dl data-v-83546474><dt class="font-bold" data-v-83546474>Note:</dt><dd data-v-83546474><span class="font-bold" data-v-83546474>QC_Status:</span><dl data-v-83546474><dd data-v-83546474><span style="background-color:#CCFFCC;" data-v-83546474>1</span>: QC ok and data loaded in our database,</dd><dd data-v-83546474><span style="background-color:#fff0f0;" data-v-83546474>0</span>: QC <span style="color:#c7254e;background-color:#f9f2f4;border-color:#c7254e;" data-v-83546474>NOT</span> ok and data not loaded in our database.</dd></dl></dd></dl></div>',1)),e(Et,{id:c(p),batchCount:A.value.allData.length},null,8,["id","batchCount"]),a("h3",{id:`${c(s)}#feature-table`},"Feature table",8,ae),a("div",oe,[t[21]||(t[21]=a("span",{class:"font-bold"},"Note:",-1)),t[22]||(t[22]=a("br",null,null,-1)),a("dl",null,[a("dd",null,[t[17]||(t[17]=l(" HGMT meticulously structured and arranged each microbial taxon (i.e. species and genus) by the corresponding ")),e(i,{to:"https://www.ncbi.nlm.nih.gov/taxonomy","is-external":""},{default:o(()=>t[15]||(t[15]=[l("NCBI Taxonomy ID")])),_:1}),t[18]||(t[18]=l(" (if available), in order to facilitate the effective reuse of microbial data spanning various sources; ")),e(i,{"show-icon":!1,to:"",onClick:L(n,["prevent"])},{default:o(()=>[e(v,{content:"This may takes a few seconds.",placement:"top"},{default:o(()=>t[16]||(t[16]=[l(" download the table. ")])),_:1}),e(g,null,{default:o(()=>[e(c(V))]),_:1})]),_:1})]),t[19]||(t[19]=a("dd",null," HGMT provides microbial relative abundance profiles at genus-level and speicies-level for WGS, and only genus-level for 16S/ITS. ",-1)),t[20]||(t[20]=a("dd",null," HGMT provides KO abundance profiles only for WGS. ",-1))])]),a("div",ne,[e(U,{data:A.value.allData,"cell-style":{"background-color":"#faf5ff"},"header-cell-style":{"background-color":"#faf5ff"}},{default:o(()=>[e(F,{prop:"batch",label:"Batch"}),e(F,{prop:"assay_type",label:"Assay Type"}),e(F,{prop:"assay_type",label:"Bacterial Profiles"},{default:o(({row:m})=>[m.assay_type==="ITS"?(_(),w("div",le,"NA")):(_(),G(i,{key:1,"show-icon":!1,to:"",onClick:L(r,["prevent"])},{default:o(()=>[e(v,{content:"This may takes a few seconds.",placement:"top"},{default:o(()=>t[23]||(t[23]=[l(" Relative abundance table of bacteria ")])),_:1}),e(g,null,{default:o(()=>[e(c(V))]),_:1})]),_:1}))]),_:1}),e(F,{prop:"",label:"Fungal Profiles"},{default:o(({row:m})=>[m.assay_type==="16S"?(_(),w("div",se,"NA")):(_(),G(i,{key:1,"show-icon":!1,to:"",onClick:L(M,["prevent"])},{default:o(()=>[e(v,{content:"This may takes a few seconds.",placement:"top"},{default:o(()=>t[24]||(t[24]=[l(" Relative abundance table of fungi ")])),_:1}),e(g,null,{default:o(()=>[e(c(V))]),_:1})]),_:1}))]),_:1}),e(F,{prop:"",label:"KO Profiles"},{default:o(({row:m})=>[m.assay_type==="WGS"?(_(),G(i,{key:0,"show-icon":!1,to:"",onClick:L(k,["prevent"])},{default:o(()=>[e(v,{content:"Copy download command to clipboard",placement:"top"},{default:o(()=>t[25]||(t[25]=[l(" Relative abundance table of KOs ")])),_:1}),e(g,null,{default:o(()=>[e(c(V))]),_:1})]),_:1})):(_(),w("div",re," NA "))]),_:1})]),_:1},8,["data"])]),a("h2",{id:`${c(s)}#marker-taxa`},"Marker taxa",8,ie),h.value.stats.da_stats.length===0?(_(),w("div",de,t[26]||(t[26]=[a("p",{class:"info"},[a("span",{style:{color:"#c7254e","background-color":"#f9f2f4","border-color":"#c7254e"}}," No batch meets the differential abundance analysis requirements.")],-1)]))):(_(),w("div",ue,[a("div",ce,[t[28]||(t[28]=l(" So far, ")),a("span",pe,y((X=h.value.stats.da_stats[0])==null?void 0:X.total_marker_count),1),t[29]||(t[29]=l(" marker taxa have been identified for ")),a("span",fe,y((Y=h.value.stats.da_stats)==null?void 0:Y.length),1),t[30]||(t[30]=l(" Phenotype comparison(s) (i.e. DA batches), as shown below: ")),e(i,{"is-external":"","show-icon":!1,to:"",onClick:L(P,["prevent"])},{default:o(()=>[t[27]||(t[27]=l("download the marker taxa list ")),e(g,null,{default:o(()=>[e(c(V))]),_:1})]),_:1}),e(U,{data:h.value.stats.da_stats,"cell-style":{"background-color":"#faf5ff"},"header-cell-style":{"background-color":"#faf5ff"}},{default:o(()=>[e(F,{prop:"da_id",label:"DA Batch",width:"100"}),e(F,{prop:"batch",label:"Batch",width:"150"}),e(F,{prop:"assay_type",label:"Assay Type",width:"120"}),e(F,{prop:"case_run_count",label:"Case (Nr. Samples)",width:"230"},{default:o(({row:m})=>[e(i,{to:`/explore/${x.value.phenotype_id}`},{default:o(()=>[l(y(m.case_name)+" ("+y(m.case_run_count)+") ",1)]),_:2},1032,["to"])]),_:1}),e(F,{prop:"control_run_count",label:"Control (Nr. Samples)",width:"200"},{default:o(({row:m})=>[e(i,{to:"/explore/D006262/"},{default:o(()=>[l(y(m.control_name)+" ("+y(m.control_run_count)+") ",1)]),_:2},1024)]),_:1}),e(F,{prop:"marker_count",label:"Nr. Marker"})]),_:1},8,["data"])]),a("h3",{id:`${c(s)}#barplot`},"Barplot",8,_e),e(Kt,{markerData:B.value},null,8,["markerData"])]))])])}}});var Se=rt(be,[["__scopeId","data-v-83546474"]]);export{Se as default};
