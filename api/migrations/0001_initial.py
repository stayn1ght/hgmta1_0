# Generated by Django 4.1 on 2023-08-23 07:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DAResults",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("da_id", models.CharField(max_length=100)),
                ("batch", models.CharField(max_length=100)),
                ("taxa", models.CharField(max_length=500)),
                ("kingdom", models.CharField(max_length=100)),
                ("taxon_level", models.CharField(max_length=100)),
                ("w_statistic", models.FloatField()),
                ("p_value", models.FloatField()),
                ("lfc", models.FloatField()),
                ("assay_type", models.CharField(max_length=100)),
                ("case_name", models.CharField(max_length=100)),
                ("control_name", models.CharField(max_length=100)),
                ("num_case", models.IntegerField()),
                ("num_control", models.IntegerField()),
                ("taxa_short_name", models.CharField(max_length=100)),
                ("display", models.BooleanField()),
                ("nrproj", models.IntegerField()),
                ("conflict", models.IntegerField()),
            ],
            options={"db_table": "da_results",},
        ),
        migrations.CreateModel(
            name="DiseaseInfo",
            fields=[
                ("short_name", models.CharField(max_length=100)),
                ("phenotype_name", models.CharField(max_length=100)),
                (
                    "mesh_id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
            ],
            options={"db_table": "disease_info",},
        ),
        migrations.CreateModel(
            name="FeatureTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("taxa", models.CharField(max_length=500)),
                ("run_id", models.CharField(max_length=100)),
                ("abundance", models.FloatField()),
            ],
            options={"db_table": "feature_table",},
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("short_name", models.CharField(max_length=100)),
                ("amplicon_16s", models.IntegerField()),
                ("amplicon_ITS", models.IntegerField()),
                ("WGS", models.IntegerField()),
            ],
            options={"db_table": "project",},
        ),
        migrations.CreateModel(
            name="ProjectAll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_id", models.CharField(max_length=100)),
                ("assay_type", models.CharField(max_length=100)),
                ("project_title", models.CharField(max_length=200)),
                ("project_description", models.CharField(max_length=3000)),
                ("public_accession", models.CharField(max_length=100, null=True)),
                ("journal", models.CharField(max_length=100, null=True)),
                ("handler", models.CharField(max_length=100, null=True)),
            ],
            options={"db_table": "project_all",},
        ),
        migrations.CreateModel(
            name="ProjectSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_id", models.CharField(max_length=100)),
                ("batch", models.CharField(max_length=100)),
                ("summary", models.CharField(max_length=500)),
                ("associated_project", models.CharField(max_length=100, null=True)),
            ],
            options={"db_table": "project_summary",},
        ),
        migrations.CreateModel(
            name="Run",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("short_name", models.CharField(max_length=100)),
                ("amplicon_16s", models.IntegerField()),
                ("amplicon_ITS", models.IntegerField()),
                ("WGS", models.IntegerField()),
                ("Total", models.IntegerField()),
            ],
            options={"db_table": "run",},
        ),
        migrations.CreateModel(
            name="SampleMetaCurated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_id", models.CharField(max_length=100)),
                ("run_id", models.CharField(max_length=100)),
                ("sample_name", models.CharField(max_length=100)),
                ("assay_type", models.CharField(max_length=100)),
                ("sequencing_method", models.CharField(max_length=100)),
                ("phenotype_name", models.CharField(max_length=100)),
                ("sample_description", models.CharField(max_length=100)),
                ("phenotype_id", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("geographic_location", models.CharField(max_length=100)),
                ("longitude", models.CharField(max_length=100)),
                ("lattitude", models.CharField(max_length=100)),
                ("age", models.CharField(max_length=100)),
                ("sex", models.CharField(max_length=100)),
                ("bmi", models.CharField(max_length=100)),
                ("antibiotic_use", models.CharField(max_length=100)),
                ("antibiotic_name", models.CharField(max_length=100)),
                ("bodysite", models.CharField(max_length=100)),
                ("batch", models.CharField(max_length=100)),
                ("batch2", models.CharField(max_length=100)),
                ("QC_state", models.CharField(max_length=100)),
                ("QC_Bacteria", models.CharField(max_length=100)),
                ("QC_Bacteria_gg", models.CharField(max_length=100)),
                ("QC_Fungi", models.CharField(max_length=100)),
            ],
            options={"db_table": "sample_meta_curated",},
        ),
    ]
